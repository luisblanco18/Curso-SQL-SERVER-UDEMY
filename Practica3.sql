/*Sub Consultas*/
SELECT TP.*
FROM dbo.tblProductos TP
WHERE TP.COD_PROD IN (SELECT TVD.COD_PROD
					  FROM dbo.tblVentas_Detalle TVD
					  WHERE TVD.CANTIDAD > 200)

SELECT TP.*
FROM dbo.tblProductos TP
WHERE TP.COS_PROM_C >= (SELECT AVG(TP2.COS_PROM_C) FROM dbo.tblProductos TP2)

/*ALL (EN CASO DE TENER MAS DE 1 RESPUESTA EN LA SUBCONSULTA)*/
SELECT TP.*
FROM dbo.tblProductos TP
WHERE TP.COS_PROM_C >ALL (SELECT TOP 2 TP2.COS_PROM_C FROM dbo.tblProductos TP2)
ORDER BY TP.COS_PROM_C

/*ANY (EN CASO DE TENER MAS DE 1 RESPUESTA EN LA SUBCONSULTA)*/
SELECT TP.*
FROM dbo.tblProductos TP
WHERE TP.COS_PROM_C <ANY (SELECT TOP 2 TP2.COS_PROM_C FROM dbo.tblProductos TP2)
ORDER BY TP.COS_PROM_C DESC


/*EXISTS AND NO EXISTS VALIDA SUB CONSULTAS*/
SELECT *
FROM dbo.tblClientes TC
WHERE NOT EXISTS(SELECT * FROM tblVentas TV WHERE TV.COD_ID = TC.COD_ID)

/*HAVING*/
SELECT TP.MARCA,
	   AVG(TP.PRECIO_VTA) AS PROMEDIO_VTA
FROM dbo.tblProductos TP
GROUP BY TP.MARCA
HAVING AVG(TP.PRECIO_VTA) > (SELECT AVG(TP2.PRECIO_VTA) FROM dbo.tblProductos TP2)
ORDER BY PROMEDIO_VTA DESC

/*TABLA DERIVADA*/
SELECT TV.*, TOP_VENTAS.TOTAL_VENTA
FROM dbo.tblVentas TV
INNER JOIN(
			SELECT TOP 10 TVD.ID,
				   SUM(TVD.CANTIDAD * TVD.VALOR) AS TOTAL_VENTA
			FROM dbo.tblVentas_Detalle TVD
			GROUP BY TVD.ID
			ORDER BY TOTAL_VENTA DESC
			) AS TOP_VENTAS ON TV.ID=TOP_VENTAS.ID

/*SUB CONSULTA SELECT (NO RECOMENDABLE POR PERFORMANCE)*/
SELECT TV.ID,
	   TV.COD_SUC,
	   (SELECT TS.Sucursal FROM dbo.tblSucursales TS WHERE TS.COD_SUC = TV.COD_SUC COLLATE DATABASE_DEFAULT) AS NOM_SUC,
	   TV.NUM_DOC,
	   TV.CONDICIONES,
	   (SELECT TC.NOMBRE FROM dbo.tblClientes TC WHERE TC.COD_ID=TV.COD_ID) AS NOMBRE_CLIENTE
FROM dbo.tblVentas TV

/*CTE*/
WITH CTE_RESUMEN
AS
(
	SELECT TV.COD_SUC,
		   TV.COD_ID,
		   SUM(TVD.CANTIDAD * TVD.VALOR) AS TOTAL_VENTA
	FROM dbo.tblVentas TV INNER JOIN tblVentas_Detalle TVD ON TV.ID = TVD.ID
	WHERE TV.FECHA BETWEEN '2014/01/01' AND '2015/12/01'
	GROUP BY TV.COD_SUC, TV.COD_ID
),
CTE_MAX
AS
(
	SELECT CR.COD_SUC,
	       MAX(CR.TOTAL_VENTA) AS TOTAL_VENTA
	FROM CTE_RESUMEN CR
	GROUP BY CR.COD_SUC
)
SELECT CR.COD_SUC,TS.Sucursal AS SUCURSAL,CR.COD_ID,TC.NOMBRE AS CLIENTE,CM.TOTAL_VENTA
FROM CTE_RESUMEN CR
INNER JOIN CTE_MAX CM ON CR.COD_SUC = CM.COD_SUC AND CR.TOTAL_VENTA =CM.TOTAL_VENTA
INNER JOIN dbo.tblClientes TC ON CR.COD_ID = TC.COD_ID COLLATE DATABASE_DEFAULT
INNER JOIN dbo.tblSucursales TS ON CR.COD_SUC = TS.COD_SUC COLLATE DATABASE_DEFAULT
ORDER BY CR.COD_SUC

/*QUITAR FILAS DUPLICADAS CON CTE*/
WITH CTE_QUITARFILAS
AS(
	SELECT TV.COD_ID,
		   N = ROW_NUMBER() OVER (PARTITION BY TV.COD_ID ORDER BY TV.COD_ID)
	FROM dbo.tblVentas TV
)
SELECT * FROM CTE_QUITARFILAS WHERE N=1

/*JERARQUIA (RECURSIVA)*/

sp_help 'tblsucursales'

ALTER TABLE dbo.tblSucursales ADD COD_SUC_JEFE VARCHAR(2)

UPDATE dbo.tblSucursales SET COD_SUC_JEFE = '01' WHERE COD_SUC IN ('02','06','13')
UPDATE dbo.tblSucursales SET COD_SUC_JEFE = '02' WHERE COD_SUC BETWEEN '03' AND '05'
UPDATE dbo.tblSucursales SET COD_SUC_JEFE = '06' WHERE COD_SUC BETWEEN '07' AND '12'
UPDATE dbo.tblSucursales SET COD_SUC_JEFE = '13' WHERE COD_SUC BETWEEN '14' AND '19'

INSERT INTO dbo.tblSucursales(COD_SUC,Sucursal,COD_SUC_JEFE) VALUES('08','Sucursal 8','06')

SELECT * FROM dbo.tblSucursales

WITH CTE_JERARQUIA
AS(
	SELECT 1 AS JERARQUIA, TS.COD_SUC,CONVERT(NVARCHAR(255), TS.Sucursal) AS Sucursal
	FROM dbo.tblSucursales TS
	WHERE TS.COD_SUC_JEFE IS NULL
	UNION ALL
	SELECT JERARQUIA +1, TS.COD_SUC, CONVERT(NVARCHAR(255), REPLICATE('|   ', JERARQUIA) + TS.Sucursal) AS Sucursal
	FROM CTE_JERARQUIA CJ INNER JOIN dbo.tblSucursales TS ON TS.COD_SUC_JEFE = CJ.COD_SUC COLLATE DATABASE_DEFAULT
	
)
SELECT * FROM CTE_JERARQUIA CJ ORDER BY CJ.COD_SUC


/*Ejemplo CTE*/
WITH CTE_VENTAS1
AS
(
SELECT TL.NOM_LIN,SUM(TVD.CANTIDAD * TVD.VALOR) AS TOTAL_LINEAS
FROM dbo.tblVentas TV 
	INNER JOIN dbo.tblVentas_Detalle TVD ON TV.ID = TVD.ID
	INNER JOIN dbo.tblProductos TP ON TVD.COD_PROD = TP.COD_PROD
	INNER JOIN dbo.tblLineas TL ON TP.COD_LIN = TL.COD_LIN
WHERE TV.FECHA BETWEEN '2013/01/01' AND '2019/11/15'
GROUP BY ROLLUP(TL.NOM_LIN)
),
CTE_VENTAS2
AS
(
SELECT CV.TOTAL_LINEAS AS TOTAL_VENTAS
FROM CTE_VENTAS1 CV
WHERE CV.NOM_LIN IS NULL
),
CTE_VENTAS3
AS
(SELECT * FROM CTE_VENTAS1 CV1 CROSS APPLY CTE_VENTAS2 CV2)
SELECT *,SUM(CV.TOTAL_LINEAS) OVER(ORDER BY CV.NOM_LIN) AS Acumulado_Linea,
	   CV.TOTAL_LINEAS / CV.TOTAL_VENTAS * 100 AS P_Utilidad
FROM CTE_VENTAS3 CV
WHERE CV.NOM_LIN IS NOT NULL